pipeline {
  agent {label "kernel && cross"}
  stages {
    stage("build") {
      steps {
        sh "make distclean"
        sh "ti_config_fragments/defconfig_builder.sh -t ti_sdk_am3x_rt_release"
        sh "ARCH=arm make ti_sdk_am3x_rt_release_defconfig"
        // Instead of  ARCH=arm make menuconfig we can copy an existing .config:
        sh "cp mahalia/kernel.config .config"
        sh "ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make -j5 zImage modules dtbs"
        sh "rm -rf compiled_modules && mkdir compiled_modules"
        sh "ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- INSTALL_MOD_PATH=compiled_modules make modules_install"
        sh('mhamakedeb mahalia/mahalia-kernel.csv $(make kernelversion).mha.' +
           '           $(make kernelversion).mha.$(cat mahalia/version) armhf')
        stash name: "deb", includes: '*.deb'
        archiveArtifacts "*.deb"
      }
    }
    /*
    stage("debian packages for apt") {
      agent {label "aptly"}
      steps {
        // receive all deb packages from openmha build
        unstash "deb"
        archiveArtifacts "*.deb"

        // Copies the new debs to the stash of existing debs,
        sh "make storage"

        build job:         "/hoertech-aptly/master",
              quietPeriod: 300,
              wait:        false
      }
    }
    */
  }

  // Email notification on failed build taken from
  // https://jenkins.io/doc/pipeline/tour/post/
  // multiple recipients are comma-separated:
  // https://jenkins.io/doc/pipeline/steps/workflow-basic-steps/#-mail-%20mail
  post {
    failure {
      mail to: 't.herzke@hoertech.de',
           subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
           body: "Something is wrong with ${env.BUILD_URL}"
    }
  }
}
